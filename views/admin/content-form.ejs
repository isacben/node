<div class="row center my-3">
    <div class="col">
        <a href="/p/<%= page.pageUrl %>">See your page</a>
    </div>
</div>

<div class="row center my-3">
    <div class="col-sm-8">
        <form>
            <input type="hidden" name="userId" value="<%= user._id%>">

            <!-- Page logo -->
            <%- include('./form/logo.ejs'); %>

            <!-- Page url -->
            <%- include('./form/page-url.ejs'); %>

            <!-- Button color -->
            <%- include('./form/button-color.ejs'); %>

            <!-- Page name -->
            <%- include('./form/page-name.ejs'); %>

            <!-- Top section -  -->
            <%- include('./form/top-section.ejs'); %>

            <!-- Contact form -->
            <%- include('./form/contact-form.ejs'); %>

            <!-- Features section -->
            <%- include('./form/features.ejs'); %>

            <!-- Columns section -->
            <%- include('./form/columns.ejs'); %>

            <!-- References -->
            <div class="card mb-3">
                <div class="card-header bg-secondary text-white">
                    References
                </div>
                <div class="card-body">
                    <div class="form-group">
                        <label for="referenceLine1">First line of the comment</label>
                        <input name="referenceLine1" type="text" class="form-control form-control" value="<%= page.referenceLine1 %>">
                        <small id="referenceLine1Help" class="form-text text-muted">The first line of your reference's comment.</small>
                    </div>
                    <div class="form-group">
                        <label for="referenceLine2">Second line of the comment</label>
                        <input name="referenceLine2" type="text" class="form-control form-control" value="<%= page.referenceLine2 %>">
                        <small id="referenceLine2Help" class="form-text text-muted">The second line of your reference's comment.</small>
                    </div>
                    <div class="form-group">
                        <label for="referenceName">Name and title</label>
                        <input name="referenceName" type="text" class="form-control form-control" value="<%= page.referenceName %>">
                        <small id="referenceNameHelp" class="form-text text-muted">Name and title of your reference. For example, Isaac Benitez, lando founder.</small>
                    </div>
                </div>
            </div>

            <!-- Footer section -->
            <div class="card mb-3">
                <div class="card-header bg-secondary text-white">
                    Footer
                </div>
                <div class="card-body">
                    <div class="form-group">
                        <label for="footerText">Text for the footer</label>
                        <input name="footerText" type="text" class="form-control form-control" value="<%= page.footerText %>">
                        <small id="footerTextHelp" class="form-text text-muted">Text for the footer. For example, &copy;2020 lando.com. All rigths reserved.</small>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md">
            <div class="sticky-top">
                <div class="card mb-3">
                    <div class="card-body">
                        <div class="form-group">
                            <p class="card-text">Save your work:</p>
                            <button class="btn btn-primary">Save</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </form>
</div>

<script>
    const form = document.querySelector('form');
    // const emailError = document.querySelector('.email.error');
    // const passwordError = document.querySelector('.password.error');

    form.addEventListener('submit', async (e) => {
        e.preventDefault();

        tinyMCE.triggerSave(true,true);

        // reset errors
        // emailError.textContent= '';
        // passwordError.textContent = '';

        // get the values
        const userId = form.userId.value;
        const pageLogo = form.pageLogo.value;
        const pageUrl = form.pageUrl.value;
        const buttonColor = form.buttonColor.value;
        const pageName = form.pageName.value;
        const topHeadline = form.topHeadline.value;
        const secondaryHeadline = form.secondaryHeadline.value;
        const mainDescription = form.mainDescription.value;

        const contactFormTitle = form.contactFormTitle.value;
        const contactFormSubtitle = form.contactFormSubtitle.value;
        const contactFormIncludeName = form.contactFormIncludeName.value;
        const contactFormIncludeComment = form.contactFormIncludeComment.value;
        const contactFormIncludeTel = form.contactFormIncludeTel.value;
        const contactFormIncludeEmail = form.contactFormIncludeEmail.value;
        const contactFormButton = form.contactFormButton.value;

        const featuresHeadline = form.featuresHeadline.value;

        const firstFeatureIcon = form.firstFeatureIcon.value;
        const firstFeatureTitle = form.firstFeatureTitle.value;
        const firstFeatureDescription = form.firstFeatureDescription.value;

        const secondFeatureIcon = form.secondFeatureIcon.value;
        const secondFeatureTitle = form.secondFeatureTitle.value;
        const secondFeatureDescription = form.secondFeatureDescription.value;

        const thirdFeatureIcon = form.thirdFeatureIcon.value;
        const thirdFeatureTitle = form.thirdFeatureTitle.value;
        const thirdFeatureDescription = form.thirdFeatureDescription.value;

        const forthFeatureIcon = form.forthFeatureIcon.value;
        const forthFeatureTitle = form.forthFeatureTitle.value;
        const forthFeatureDescription = form.forthFeatureDescription.value;

        const columsHeadline = form.columsHeadline.value;
        const columnsSubtitle = form.columnsSubtitle.value;

        const firstColumnImage = form.firstColumnImage.value;
        const firstColumnTitle = form.firstColumnTitle.value;
        const firstColumnSubtitle = form.firstColumnSubtitle.value;
        const firstColumnDescription = form.firstColumnDescription.value;

        const secondColumnImage = form.secondColumnImage.value;
        const secondColumnTitle = form.secondColumnTitle.value;
        const secondColumnSubtitle = form.secondColumnSubtitle.value;
        const secondColumnDescription = form.secondColumnDescription.value;

        const thirdColumnImage = form.thirdColumnImage.value;
        const thirdColumnTitle = form.thirdColumnTitle.value;
        const thirdColumnSubtitle = form.thirdColumnSubtitle.value;
        const thirdColumnDescription = form.thirdColumnDescription.value;

        const referenceLine1 = form.referenceLine1.value;
        const referenceLine2 = form.referenceLine2.value;
        const referenceName = form.referenceName.value;

        const footerText = form.footerText.value;

        try {
            const res = await fetch('/update', {
                method: 'POST',
                body: JSON.stringify({ 
                    userId,
                    pageLogo,
                    pageUrl,
                    buttonColor,
                    pageName, 
                    topHeadline,
                    secondaryHeadline,
                    mainDescription,
                    contactFormTitle,
                    contactFormSubtitle,
                    contactFormIncludeName,
                    contactFormIncludeComment,
                    contactFormIncludeTel,
                    contactFormIncludeEmail,
                    contactFormButton,
                    featuresHeadline,
                    firstFeatureIcon,
                    firstFeatureTitle,
                    firstFeatureDescription,
                    secondFeatureIcon,
                    secondFeatureTitle,
                    secondFeatureDescription,
                    thirdFeatureIcon,
                    thirdFeatureTitle,
                    thirdFeatureDescription,
                    forthFeatureIcon,
                    forthFeatureTitle,
                    forthFeatureDescription,
                    columsHeadline,
                    columnsSubtitle,
                    firstColumnImage,
                    firstColumnTitle,
                    firstColumnSubtitle,
                    firstColumnDescription,
                    secondColumnImage,
                    secondColumnTitle,
                    secondColumnSubtitle,
                    secondColumnDescription,
                    thirdColumnImage,
                    thirdColumnTitle,
                    thirdColumnSubtitle,
                    thirdColumnDescription,
                    referenceLine1,
                    referenceLine2,
                    referenceName,
                    footerText,
                }),
                headers: { 'Content-Type': 'application/json' }
            });
            const data = await res.json();
            console.log(data);
            if (data.errors) {
                // emailError.textContent = data.errors.email;
                // passwordError.textContent = data.errors.password;
            }
            if (data.page) {
                location.assign('/dashboard');
            }
        } catch (err) {
            console.log(err);
        }
    });
</script>

<script src="https://cdn.tiny.cloud/1/no-api-key/tinymce/5/tinymce.min.js" referrerpolicy="origin"></script>

<script>
    tinymce.init({
    selector: '#textareaDescription',
    menubar:false,
    statusbar: false,
    plugins: 'lists advlist',
    toolbar: 'bold italic | bullist'
    });
</script>

<script>
    function processImg(id, width, height) {
        console.log("connected to ", id, width, height);

        const file = document.querySelector(`#${id}Upload`).files[0];

        if (!file) return;

        const reader = new FileReader();
        
        reader.readAsDataURL(file);
        
        reader.onload = function(event) {
            const imgElement = document.createElement("img");
            imgElement.src = event.target.result;

            //document.querySelector(`#${id}Preview`).src = event.target.result;

            imgElement.onload = function(e) {
                const canvas = document.createElement("canvas");

                const originalImgWidht = e.target.width;
                const originalImgHeight = e.target.height;
                
                const MAX_HEIGHT = 250;

                const scaleSize = MAX_HEIGHT / e.target.height;

                if (originalImgHeight > MAX_HEIGHT) {
                    canvas.width = e.target.width * scaleSize;
                    canvas.height = MAX_HEIGHT;
                }
                else {
                    canvas.width = originalImgWidht;
                    canvas.height = originalImgHeight;
                }

                const ctx = canvas.getContext("2d");

                ctx.imageSmoothingQuality = "high";
                ctx.drawImage(e.target, 0, 0, canvas.width, canvas.height);

                const srcEncoded = ctx.canvas.toDataURL(e.target, "image/jpeg", 1);

                document.querySelector(`#${id}Preview`).src = srcEncoded;

                document.getElementsByName(id)[0].value = srcEncoded;
            }
        };
    }
</script>